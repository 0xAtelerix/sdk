// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: appchain.proto

package emitterproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3 // Used only by the Watch method.
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_appchain_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_appchain_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{8, 0}
}

// Request for retrieving checkpoints
type GetCheckpointsRequest struct {
	state                               protoimpl.MessageState `protogen:"open.v1"`
	ChainId                             uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	LatestPreviousCheckpointBlockNumber uint64                 `protobuf:"varint,2,opt,name=latest_previous_checkpoint_block_number,json=latestPreviousCheckpointBlockNumber,proto3" json:"latest_previous_checkpoint_block_number,omitempty"`
	Limit                               *uint32                `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"` // Maximum number of checkpoints to return
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *GetCheckpointsRequest) Reset() {
	*x = GetCheckpointsRequest{}
	mi := &file_appchain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCheckpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointsRequest) ProtoMessage() {}

func (x *GetCheckpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointsRequest.ProtoReflect.Descriptor instead.
func (*GetCheckpointsRequest) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{0}
}

func (x *GetCheckpointsRequest) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *GetCheckpointsRequest) GetLatestPreviousCheckpointBlockNumber() uint64 {
	if x != nil {
		return x.LatestPreviousCheckpointBlockNumber
	}
	return 0
}

func (x *GetCheckpointsRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type GetChainIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChainIDResponse) Reset() {
	*x = GetChainIDResponse{}
	mi := &file_appchain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChainIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainIDResponse) ProtoMessage() {}

func (x *GetChainIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainIDResponse.ProtoReflect.Descriptor instead.
func (*GetChainIDResponse) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{1}
}

func (x *GetChainIDResponse) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// Request for retrieving external transactions
type GetExternalTransactionsRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	LatestPreviousBlockNumber uint64                 `protobuf:"varint,1,opt,name=latest_previous_block_number,json=latestPreviousBlockNumber,proto3" json:"latest_previous_block_number,omitempty"` // The block number from which to start retrieving transactions
	Limit                     *uint32                `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`                                                                        // Maximum number of transactions to return
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetExternalTransactionsRequest) Reset() {
	*x = GetExternalTransactionsRequest{}
	mi := &file_appchain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExternalTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExternalTransactionsRequest) ProtoMessage() {}

func (x *GetExternalTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExternalTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetExternalTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{2}
}

func (x *GetExternalTransactionsRequest) GetLatestPreviousBlockNumber() uint64 {
	if x != nil {
		return x.LatestPreviousBlockNumber
	}
	return 0
}

func (x *GetExternalTransactionsRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

// Response message containing checkpoints
type CheckpointResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Checkpoints   []*CheckpointResponse_Checkpoint `protobuf:"bytes,1,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointResponse) Reset() {
	*x = CheckpointResponse{}
	mi := &file_appchain_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointResponse) ProtoMessage() {}

func (x *CheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointResponse.ProtoReflect.Descriptor instead.
func (*CheckpointResponse) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{3}
}

func (x *CheckpointResponse) GetCheckpoints() []*CheckpointResponse_Checkpoint {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

// Helper message for representing byte arrays (to support [][]byte)
type ByteArray struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ByteArray) Reset() {
	*x = ByteArray{}
	mi := &file_appchain_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ByteArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteArray) ProtoMessage() {}

func (x *ByteArray) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteArray.ProtoReflect.Descriptor instead.
func (*ByteArray) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{4}
}

func (x *ByteArray) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// External transaction structure
type ExternalTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Tx            []byte                 `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalTransaction) Reset() {
	*x = ExternalTransaction{}
	mi := &file_appchain_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalTransaction) ProtoMessage() {}

func (x *ExternalTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalTransaction.ProtoReflect.Descriptor instead.
func (*ExternalTransaction) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{5}
}

func (x *ExternalTransaction) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ExternalTransaction) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

// Response for transaction batch creation
type CreateInternalTransactionsBatchResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BatchHash            []byte                 `protobuf:"bytes,1,opt,name=batch_hash,json=batchHash,proto3" json:"batch_hash,omitempty"`                                  // Hash of the transaction batch
	InternalTransactions []*ByteArray           `protobuf:"bytes,2,rep,name=internal_transactions,json=internalTransactions,proto3" json:"internal_transactions,omitempty"` // Sorted Appchain execution internal transactions
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateInternalTransactionsBatchResponse) Reset() {
	*x = CreateInternalTransactionsBatchResponse{}
	mi := &file_appchain_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInternalTransactionsBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInternalTransactionsBatchResponse) ProtoMessage() {}

func (x *CreateInternalTransactionsBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInternalTransactionsBatchResponse.ProtoReflect.Descriptor instead.
func (*CreateInternalTransactionsBatchResponse) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{6}
}

func (x *CreateInternalTransactionsBatchResponse) GetBatchHash() []byte {
	if x != nil {
		return x.BatchHash
	}
	return nil
}

func (x *CreateInternalTransactionsBatchResponse) GetInternalTransactions() []*ByteArray {
	if x != nil {
		return x.InternalTransactions
	}
	return nil
}

// Response for external transactions
// Response for external transactions (supports multiple blocks)
type GetExternalTransactionsResponse struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Blocks        []*GetExternalTransactionsResponse_BlockTransactions `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"` // Список блоков с транзакциями
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExternalTransactionsResponse) Reset() {
	*x = GetExternalTransactionsResponse{}
	mi := &file_appchain_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExternalTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExternalTransactionsResponse) ProtoMessage() {}

func (x *GetExternalTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExternalTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetExternalTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{7}
}

func (x *GetExternalTransactionsResponse) GetBlocks() []*GetExternalTransactionsResponse_BlockTransactions {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// Health check response message
type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=atelerix.execution.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_appchain_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type CheckpointResponse_Checkpoint struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LatestBlockNumber  uint64                 `protobuf:"varint,1,opt,name=latest_block_number,json=latestBlockNumber,proto3" json:"latest_block_number,omitempty"` // Latest Appchain block included in the checkpoint
	StateRoot          []byte                 `protobuf:"bytes,2,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	BlockHash          []byte                 `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	ExternalTxRootHash []byte                 `protobuf:"bytes,4,opt,name=external_tx_root_hash,json=externalTxRootHash,proto3" json:"external_tx_root_hash,omitempty"` // Format & DB config for external transactions
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CheckpointResponse_Checkpoint) Reset() {
	*x = CheckpointResponse_Checkpoint{}
	mi := &file_appchain_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointResponse_Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointResponse_Checkpoint) ProtoMessage() {}

func (x *CheckpointResponse_Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointResponse_Checkpoint.ProtoReflect.Descriptor instead.
func (*CheckpointResponse_Checkpoint) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CheckpointResponse_Checkpoint) GetLatestBlockNumber() uint64 {
	if x != nil {
		return x.LatestBlockNumber
	}
	return 0
}

func (x *CheckpointResponse_Checkpoint) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *CheckpointResponse_Checkpoint) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *CheckpointResponse_Checkpoint) GetExternalTxRootHash() []byte {
	if x != nil {
		return x.ExternalTxRootHash
	}
	return nil
}

type GetExternalTransactionsResponse_BlockTransactions struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BlockNumber          uint64                 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`                             // Блок, к которому относятся транзакции
	TransactionsRootHash []byte                 `protobuf:"bytes,2,opt,name=transactions_root_hash,json=transactionsRootHash,proto3" json:"transactions_root_hash,omitempty"` // Хеш всех транзакций блока
	ExternalTransactions []*ExternalTransaction `protobuf:"bytes,3,rep,name=external_transactions,json=externalTransactions,proto3" json:"external_transactions,omitempty"`   // Список транзакций для блока
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetExternalTransactionsResponse_BlockTransactions) Reset() {
	*x = GetExternalTransactionsResponse_BlockTransactions{}
	mi := &file_appchain_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExternalTransactionsResponse_BlockTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExternalTransactionsResponse_BlockTransactions) ProtoMessage() {}

func (x *GetExternalTransactionsResponse_BlockTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_appchain_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExternalTransactionsResponse_BlockTransactions.ProtoReflect.Descriptor instead.
func (*GetExternalTransactionsResponse_BlockTransactions) Descriptor() ([]byte, []int) {
	return file_appchain_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetExternalTransactionsResponse_BlockTransactions) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *GetExternalTransactionsResponse_BlockTransactions) GetTransactionsRootHash() []byte {
	if x != nil {
		return x.TransactionsRootHash
	}
	return nil
}

func (x *GetExternalTransactionsResponse_BlockTransactions) GetExternalTransactions() []*ExternalTransaction {
	if x != nil {
		return x.ExternalTransactions
	}
	return nil
}

var File_appchain_proto protoreflect.FileDescriptor

var file_appchain_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x61, 0x70, 0x70, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x27, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x23, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x2f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x12,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72,
	0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0xad, 0x01, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x31, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x74, 0x78, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x78, 0x52,
	0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x1f, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x22, 0x9c, 0x01, 0x0a, 0x27, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x48, 0x61, 0x73, 0x68, 0x12, 0x52, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0xca, 0x01, 0x0a,
	0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x5c, 0x0a, 0x15, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x74, 0x65,
	0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x4f, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x03, 0x32, 0xb9, 0x03, 0x0a, 0x07, 0x45, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x63, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x29, 0x2e, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x74, 0x65,
	0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x76, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x3b, 0x2e,
	0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69,
	0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x74, 0x65,
	0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e, 0x01,
	0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x48, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x61, 0x74, 0x65, 0x6c,
	0x65, 0x72, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x72, 0x69, 0x78, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x16,
	0x5a, 0x14, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_appchain_proto_rawDescOnce sync.Once
	file_appchain_proto_rawDescData []byte
)

func file_appchain_proto_rawDescGZIP() []byte {
	file_appchain_proto_rawDescOnce.Do(func() {
		file_appchain_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_appchain_proto_rawDesc), len(file_appchain_proto_rawDesc)))
	})
	return file_appchain_proto_rawDescData
}

var file_appchain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_appchain_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_appchain_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0),                    // 0: atelerix.execution.HealthCheckResponse.ServingStatus
	(*GetCheckpointsRequest)(nil),                             // 1: atelerix.execution.GetCheckpointsRequest
	(*GetChainIDResponse)(nil),                                // 2: atelerix.execution.GetChainIDResponse
	(*GetExternalTransactionsRequest)(nil),                    // 3: atelerix.execution.GetExternalTransactionsRequest
	(*CheckpointResponse)(nil),                                // 4: atelerix.execution.CheckpointResponse
	(*ByteArray)(nil),                                         // 5: atelerix.execution.ByteArray
	(*ExternalTransaction)(nil),                               // 6: atelerix.execution.ExternalTransaction
	(*CreateInternalTransactionsBatchResponse)(nil),           // 7: atelerix.execution.CreateInternalTransactionsBatchResponse
	(*GetExternalTransactionsResponse)(nil),                   // 8: atelerix.execution.GetExternalTransactionsResponse
	(*HealthCheckResponse)(nil),                               // 9: atelerix.execution.HealthCheckResponse
	(*CheckpointResponse_Checkpoint)(nil),                     // 10: atelerix.execution.CheckpointResponse.Checkpoint
	(*GetExternalTransactionsResponse_BlockTransactions)(nil), // 11: atelerix.execution.GetExternalTransactionsResponse.BlockTransactions
	(*emptypb.Empty)(nil),                                     // 12: google.protobuf.Empty
}
var file_appchain_proto_depIdxs = []int32{
	10, // 0: atelerix.execution.CheckpointResponse.checkpoints:type_name -> atelerix.execution.CheckpointResponse.Checkpoint
	5,  // 1: atelerix.execution.CreateInternalTransactionsBatchResponse.internal_transactions:type_name -> atelerix.execution.ByteArray
	11, // 2: atelerix.execution.GetExternalTransactionsResponse.blocks:type_name -> atelerix.execution.GetExternalTransactionsResponse.BlockTransactions
	0,  // 3: atelerix.execution.HealthCheckResponse.status:type_name -> atelerix.execution.HealthCheckResponse.ServingStatus
	6,  // 4: atelerix.execution.GetExternalTransactionsResponse.BlockTransactions.external_transactions:type_name -> atelerix.execution.ExternalTransaction
	1,  // 5: atelerix.execution.Emitter.GetCheckpoints:input_type -> atelerix.execution.GetCheckpointsRequest
	12, // 6: atelerix.execution.Emitter.CreateInternalTransactionsBatch:input_type -> google.protobuf.Empty
	3,  // 7: atelerix.execution.Emitter.GetExternalTransactions:input_type -> atelerix.execution.GetExternalTransactionsRequest
	12, // 8: atelerix.execution.Emitter.GetChainId:input_type -> google.protobuf.Empty
	12, // 9: atelerix.execution.Health.Check:input_type -> google.protobuf.Empty
	12, // 10: atelerix.execution.Health.Watch:input_type -> google.protobuf.Empty
	4,  // 11: atelerix.execution.Emitter.GetCheckpoints:output_type -> atelerix.execution.CheckpointResponse
	7,  // 12: atelerix.execution.Emitter.CreateInternalTransactionsBatch:output_type -> atelerix.execution.CreateInternalTransactionsBatchResponse
	8,  // 13: atelerix.execution.Emitter.GetExternalTransactions:output_type -> atelerix.execution.GetExternalTransactionsResponse
	2,  // 14: atelerix.execution.Emitter.GetChainId:output_type -> atelerix.execution.GetChainIDResponse
	9,  // 15: atelerix.execution.Health.Check:output_type -> atelerix.execution.HealthCheckResponse
	9,  // 16: atelerix.execution.Health.Watch:output_type -> atelerix.execution.HealthCheckResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_appchain_proto_init() }
func file_appchain_proto_init() {
	if File_appchain_proto != nil {
		return
	}
	file_appchain_proto_msgTypes[0].OneofWrappers = []any{}
	file_appchain_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_appchain_proto_rawDesc), len(file_appchain_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_appchain_proto_goTypes,
		DependencyIndexes: file_appchain_proto_depIdxs,
		EnumInfos:         file_appchain_proto_enumTypes,
		MessageInfos:      file_appchain_proto_msgTypes,
	}.Build()
	File_appchain_proto = out.File
	file_appchain_proto_goTypes = nil
	file_appchain_proto_depIdxs = nil
}
